# Event Tracing for Windows (ETW)
# Kernel-mode high speed subscription based binary event/logging facility. Closely tied with Event Log since Vista.

# Many components in the OS provide ETW events. Clients can subscribe to any of the available providers, filter by any of the keywords.

# Schema files are required to interpret log events which are binary. Event schema descriptions can be included in the manifests, and many components do.

Microsoft-Windows-ETW-core

# Tracing is sometimes done via Performance Counters' Performance Logs and Alerts (PLA) which logs ETW events.
# Traces from many provides can be made via MMC Event Viewer if you enable debug and performance logs (but not from all of them).

# TraceDataHelper (TDH): Public API for decoding trace events data
# https://msdn.microsoft.com/en-us/library/windows/desktop/aa363692(v=vs.85).aspx
# To consume event specific data, the consumer must know the format of the event data. If the provider used a manifest, MOF, or TMF files to publish the format of the event data, you can use the trace data helper (TDH) functions to parse the event data. 
Microsoft-Windows-TraceDataHelper


# AutoLogger and GlobalLogger
# This component provides Autologger and Globallogger functionality.
# ETW logging sessions can be started automatically at boot to capture events occuring early during load. These sessions need to be registered at:
#    HKLM\System\CurrentControlSet\WMI\AutoLogger\*
#    HKLM\System\CurrentControlSet\WMI\GlobalLogger
# There can be several Autologger sessions but at most one GlobalLogger session. Many components install their own Autologgers for telemetry by default.
# https://msdn.microsoft.com/en-us/library/windows/desktop/aa363687(v=vs.85).aspx
