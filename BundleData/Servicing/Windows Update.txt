Microsoft-Windows-WindowsUpdateClient*
Microsoft-Windows-WindowsUpdate-Adm*		# Group policy files
Microsoft-Windows-WindowsUpdateDiagnostic*	# Diagnostics plugin

# WinSetupUI.dll
# Contains a single library, WinSetupUI.dll, with these exported functions:
#   CreateUpdateSetupUI		# W7+
#   CreateWinSetupUI		# W10+
# And a single DirectUI XML resource (as of W7).
# The resource contains a update-related wizard with pages such as "Eula", "LicenseKey", "Progress", "Ads1", "Ads2". In page list and design it seems very similar (but not exactly identical) to the wizard used in Get Windows 10 app. It is unclear where it's used.
# As of Windows 7, this DLL is statically imported by no one. It was however not included with the original installation and was first shipped 2016.02.12 as an update. At the same day, a Windows Update package update was rolled out. It is reasonable to assume the DLL is part of WU.
# Still, none of the WU dlls import WinSetupUI.dll statically and its name doesn't seem to appear in the open anywhere in their code.
Microsoft-Windows-WinSetupUI*

# WaaS Medic. Undisableable system protected service which reenables everything related to Windows Update.
Microsoft-Windows-WaaSMedic*
Microsoft-Windows-WaaSAssessment*

# UPFC (Updateability From SCM)
# Another update reenabler. Started by Service Control Manager, apparently hardcoded into it.
# Related to WaasMedic, contains strings:
#   Microsoft-Windows-WaasMedic-Enable-Remediations
# Configuration at:
#   HKLM\System\WaaS\UPFC
# Short writeup on what it does:
#   https://www.acepace.net/2019-03-29-upfc/
#    Check command line parameters
#    Check if another instance is in progress through the registry
#        If so, quit
#    Mark that upfc is running through the registry
#    Call Upfc::PerformDetectionAndRemediationIfNeeded
#    Call Upfc::LaunchWaasMedicIfAllowed
#    Call Upfc::LaunchSihIfAllowed
#    Mark that upfc is not running
Microsoft-Windows-Upfc*
